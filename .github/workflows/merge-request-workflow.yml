name: Master Merge Deployment

on:
  push:
    branches:
      - master
    # paths:
    #   - 'backend/**'

jobs:
  check-code-quality:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        task: [lint:check, format:check, test]
    name: Run ${{ matrix.task }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run ${{ matrix.task }}
        working-directory: backend
        run: docker compose run dev npm run ${{ matrix.task }}

  build-push-prod-image:
    needs: check-code-quality
    runs-on: ubuntu-latest
    outputs:
      sha_short: ${{ github.sha }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push image
        working-directory: backend
        run: |
          pwd
          ls -al
          docker compose build prod
          docker ps
          docker tag monorepo-ci-cd-pipeline-prod mdtazbinur/example-app:${{ github.sha }}
          docker push mdtazbinur/example-app:${{ github.sha }}

  deploy-prod-image:
    needs: build-push-prod-image
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to AWS-EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER_NAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login --username "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

            docker ps -f name=example-app-api -q | xargs -r docker stop
            docker ps -a -f name=example-app-api -q | xargs -r docker rm

            docker images 'mdtazbinur/example-app' -q | xargs -r docker rmi

            docker run -d --name example-app-api -p 80:3000 mdtazbinur/example-app:${{ needs.build-push-prod-image.outputs.sha_short }}

            docker logout